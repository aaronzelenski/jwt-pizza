name: CI Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: set version
        id: set_version
        run: |
          version=$(date +'%Y%m%d.%H%M%S')
          echo "version=$version" >> "$GITHUB_OUTPUT"
          printf '{"version": "%s" }' "$version" > public/version.json

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: |
          npm run build
          cp dist/index.html dist/404.html

      - name: Commit updated version
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull origin main
          git add public/version.json
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Incremented version number"
            git push
          else
            echo "No changes to commit"
          fi
      - name: Update dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: dist/

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run Playwright tests with coverage
        run: npm run test:coverage

      - name: Update coverage
        run: |
          coverage_pct=$(grep -o '"pct":[0-9.]*' coverage/coverage-summary.json | head -n 1 | cut -d ':' -f 2)
          color=$(echo "$coverage_pct < 80" | bc -l | awk '{if ($1) print "yellow"; else print "green"}')
          curl https://img.shields.io/badge/Coverage-$coverage_pct%25-$color -o coverageBadge.svg
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull origin main
          git add .
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "generated"
            git push
          else
            echo "No changes to commit"
          fi

  deploy:
    needs: build
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://pizza.cs329aaron.com/
    env:
      version: ${{needs.build.outputs.version}}
    steps:
      - name: Create OIDC token to AWS
        uses: aws-actions/configure-aws-credentials@v4  
        with:
          audience: sts.amazonaws.com
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.CI_IAM_ROLE }}

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist/

      - name: Push to AWS S3
        run: |
          echo Deploying $version
          aws s3 cp dist s3://${{ secrets.APP_BUCKET }}/$version --recursive
